{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Box","styled","div","Title","h4","props","color","Info","count","Detail","useState","alert","alertChange","useContext","countContext","useEffect","timer","setTimeout","clearTimeout","inputDataChange","param","useParams","history","useHistory","selectShoes","shoes","find","className","onChange","e","target","value","src","Number","parseInt","width","onClick","countChange","goBack","React","createContext","ShoesItem","Nav","Link","as","to","index","Test","App","Data","shoesChange","page","pageChange","addBtn","addBtnChange","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","NavDropdown","Item","Divider","exact","path","Carousel","Caption","Provider","map","a","i","url","axios","get","then","result","data","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f05589f.chunk.js","sourcesContent":["//let name1 = 'kim';\r\n//let name2 = 'park';\r\n//export {name1 , name2};\r\n\r\nexport default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n] ","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { countContext } from './App.js'\r\n//import './Detail.scss';\r\n\r\n// styled : 클래스 중복을 제거하기 위해 사용하는 방법\r\nlet Box = styled.div`\r\n  padding : 20px;\r\n`;\r\nlet Title = styled.h4`\r\n  font-size : 25px;\r\n  color : ${ props => props.color }\r\n`;\r\n\r\n\r\n// Hook\r\n/* 옛방식\r\nclass Detail2 extends React.Component{\r\n  componentDidMount(){\r\n    // 컴포넌트가 시작할때 (Ajax, Axios...)\r\n  }\r\n  componentWillUnmount(){\r\n    // 컴포넌트가 사라질때\r\n  }\r\n}\r\n*/\r\n\r\nfunction Detail(props){\r\n  let [alert , alertChange] = useState(true);\r\n  let count = useContext(countContext);\r\n\r\n  // hook\r\n  // useEffect : vue의 마운트와 비슷\r\n  // [] 조건안에 useState 가 변경될때마다 다시 리로드한다. / 아무것도 없으면 한번만 한다.\r\n  useEffect(()=>{\r\n    let timer = setTimeout(() => { alertChange(false); } , 2000);\r\n    // retrun 은 컴포넌트 사라질때 return fundtion xxx(){};\r\n    return ()=>{ clearTimeout(timer) }\r\n  },[]);\r\n\r\n\r\n  let [inputData, inputDataChange] = useState('');\r\n\r\n  // 라우터의 useParams 훅\r\n  let { param } = useParams(); \r\n  // 방문기록을 담는 object\r\n  let history = useHistory();\r\n  // 상품 매치\r\n  let selectShoes = props.shoes.find(function(shoes){\r\n    return shoes.id = param;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Box>\r\n        <Title className=\"red\" >Detail Page</Title>\r\n      </Box>\r\n\r\n      <input onChange={(e)=>{inputDataChange(e.target.value)}} />\r\n\r\n      {\r\n        /* if문이 안되기에 3항연산자 사용 */\r\n        alert === true \r\n        ? (<div className=\"my-alert\">\r\n            <p>재고가 얼마 안남았습니다.</p>\r\n          </div>)\r\n        : null\r\n      }\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n        <img src={\"https://codingapple1.github.io/shop/shoes\"+( Number.parseInt(selectShoes.id)+1)+\".jpg\"} width=\"100%\"/>\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{selectShoes.title}</h4>\r\n          <p>{selectShoes.content}</p>\r\n          <p>{selectShoes.price} won</p>\r\n          \r\n          <Info count = {props.count}></Info> \r\n\r\n          <button className=\"btn btn-danger\" onClick={()=>{ props.countChange([9,11,12]) }}>주문하기</button> &nbsp;\r\n          <button className=\"btn btn-danger\" onClick={()=>{ history.goBack(); }}>뒤로가기</button> \r\n        </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nfunction Info(props){\r\n  return (\r\n    <p>재고 : {props.count[0]}</p>\r\n  )\r\n}\r\n\r\nexport default Detail;","/* eslint-disable */\nimport React, { useContext, useState } from 'react';\nimport { Navbar, Container, Nav, NavDropdown, Carousel } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport axios from 'axios';\n\n//라우터\nimport {Link,Route,Switch} from 'react-router-dom';\nimport Detail from './Detail.js'\n\n\nexport let countContext = React.createContext();\n\nfunction App() {\n  // 중요 데이터는 App.js에서 가져오는게 좋다.\n  let [shoes, shoesChange] = useState(Data);\n  let [count , countChange] = useState([10,11,12]);\n  \n  let [page, pageChange] = useState(2);\n  let [addBtn,addBtnChange] = useState(true);\n\n  function shoesAdd(data){\n    let newShoes = [...shoes];\n    for(let i = 0 ; i<data.length ; i++){\n      newShoes.push(data[i]);  \n    }\n    console.log(newShoes);\n    shoesChange(newShoes);\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">React - Shop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {/* \n        route 사용법 path 로 지정한다.\n        exact - 정확하게 path랑 일치하는것만 \n        react는 index.html 페이지만 사용한다. 한페이지를 사용하고 html을 지우고 다시 새로 그린다.\n        \n        Switch - 일치되는 맨처음꺼만 보여주세요.\n      */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Carousel>\n            <Carousel.Item className=\"bg1\">\n              <Carousel.Caption>\n                <h3>First slide label</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item className=\"bg2\">\n              <Carousel.Caption>\n                <h3>Second slide label</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n          <div className=\"container\">\n\n            <countContext.Provider value={count}>\n              <div className=\"row\">\n                {\n                  shoes.map((a,i) =>{\n                    return <ShoesItem shoes={a} index={i} key={i}/>\n                  })\n                }\n              </div>\n            </countContext.Provider>\n            \n            {\n              addBtn === true\n              ? (\n                <button className=\"btn btn-primary\" onClick={()=>{\n                  // 서버\n                  /*axios.post(\n                    'url', {id : 'text08' , pw : 1234}\n                  ).then(\n\n                  ).catch(()={\n                    \n                  })*/\n                  let url = 'https://codingapple1.github.io/shop/data'+page+'.json';\n                  axios.get(url)\n                  // 성공시\n                  .then((result)=>{ \n    \n                    // 함수로 만들기\n                    // shoesAdd(result.data);\n    \n                    // 데이터를 바로 변경하기\n                    shoesChange( [...shoes , ...result.data] );\n                    pageChange(page+1);\n    \n                  //실패시\n                  }).catch(()=>{ \n                    console.log('실패');\n                    addBtnChange(false);\n                  });\n                }}>더보기</button>\n                )\n              : null\n            }\n          </div>\n        </Route>\n\n        <countContext.Provider value={count}>\n          <Route path=\"/detail/:param\">\n            <Detail shoes = {shoes} count= {count} countChange={countChange}/>\n          </Route>\n        </countContext.Provider>\n        \n        {/* :id - 아무 문자열이나 들어갈떼 */}\n        <Route path=\"/\">\n          <div>아무거나 적을때 이거 보여준다.</div>\n        </Route>\n\n      </Switch>\n      {/*<Route path=\"/sample\" component={Madal}></Route>*/}\n\n    </div>\n  );\n}\n\n// component \nfunction ShoesItem (props){\n  return (\n    <div className=\"col-md-4\">\n      <Nav.Link as={Link} to={\"/detail\"+\"/\"+props.index}>\n        <img src={\"https://codingapple1.github.io/shop/shoes\"+(props.index+1)+\".jpg\"} width=\"100%\"/>\n        <h4>{props.shoes.title}</h4>\n        <p>{props.shoes.price} won</p>\n        <p>{props.shoes.content}</p>\n        <Test></Test>\n      </Nav.Link>\n    </div>\n  );\n}\n\nfunction Test(){\n  let count = useContext(countContext);\n  return (\n    <p>재고 : {count[0]}</p>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}